\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kn}{package} \PYG{n+nn}{de.lukasrost.bwinf2019.superstar}\PYG{o}{;}

\PYG{k+kn}{import} \PYG{n+nn}{javax.swing.*}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.io.BufferedReader}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.io.File}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.io.FileReader}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.io.IOException}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.util.ArrayList}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.util.HashMap}\PYG{o}{;}

\PYG{k+kd}{class} \PYG{n+nc}{SuperstarHelper} \PYG{o}{\PYGZob{}}
    \PYG{k+kd}{private} \PYG{n}{File} \PYG{n}{inputFile}\PYG{o}{;}
    \PYG{k+kd}{private} \PYG{n}{ArrayList}\PYG{o}{\PYGZlt{}}\PYG{n}{Vertex}\PYG{o}{\PYGZgt{}} \PYG{n}{vertices} \PYG{o}{=} \PYG{k}{new} \PYG{n}{ArrayList}\PYG{o}{\PYGZlt{}\PYGZgt{}();}
    \PYG{k+kd}{private} \PYG{n}{HashMap}\PYG{o}{\PYGZlt{}}\PYG{n}{String}\PYG{o}{,}\PYG{n}{Vertex}\PYG{o}{\PYGZgt{}} \PYG{n}{nameToVertex} \PYG{o}{=} \PYG{k}{new} \PYG{n}{HashMap}\PYG{o}{\PYGZlt{}\PYGZgt{}();}
    \PYG{k+kd}{private} \PYG{n}{Graph} \PYG{n}{graph}\PYG{o}{;}
    \PYG{k+kd}{private} \PYG{n}{String} \PYG{n}{superStar}\PYG{o}{;}

    \PYG{k+kt}{void} \PYG{n+nf}{showFileSelectionWindow}\PYG{o}{()\PYGZob{}}
        \PYG{c+c1}{//Benutzerauswahl der einzulesenden Datei und Umwandlung in ein File\PYGZhy{}Objekt}
        \PYG{n}{JFileChooser} \PYG{n}{chooser} \PYG{o}{=} \PYG{k}{new} \PYG{n}{JFileChooser}\PYG{o}{();}
        \PYG{n}{File} \PYG{n}{file} \PYG{o}{=} \PYG{k+kc}{null}\PYG{o}{;}
        \PYG{k+kt}{int} \PYG{n}{rueckgabeWert} \PYG{o}{=} \PYG{n}{chooser}\PYG{o}{.}\PYG{n+na}{showOpenDialog}\PYG{o}{(}\PYG{k+kc}{null}\PYG{o}{);}
        \PYG{k}{if} \PYG{o}{(}\PYG{n}{rueckgabeWert} \PYG{o}{==} \PYG{n}{JFileChooser}\PYG{o}{.}\PYG{n+na}{APPROVE\PYGZus{}OPTION}\PYG{o}{)\PYGZob{}}
            \PYG{n}{file} \PYG{o}{=} \PYG{n}{chooser}\PYG{o}{.}\PYG{n+na}{getSelectedFile}\PYG{o}{();}
        \PYG{o}{\PYGZcb{}} \PYG{k}{else} \PYG{o}{\PYGZob{}}
            \PYG{n}{System}\PYG{o}{.}\PYG{n+na}{exit}\PYG{o}{(}\PYG{l+m+mi}{0}\PYG{o}{);}
        \PYG{o}{\PYGZcb{}}
        \PYG{n}{inputFile} \PYG{o}{=} \PYG{n}{file}\PYG{o}{;}
    \PYG{o}{\PYGZcb{}}

    \PYG{k+kt}{void} \PYG{n+nf}{readToGraph}\PYG{o}{()\PYGZob{}}
        \PYG{k}{try} \PYG{o}{(}\PYG{n}{BufferedReader} \PYG{n}{br} \PYG{o}{=} \PYG{k}{new} \PYG{n}{BufferedReader}\PYG{o}{(}\PYG{k}{new} \PYG{n}{FileReader}\PYG{o}{(}\PYG{n}{inputFile}\PYG{o}{)))}
        \PYG{o}{\PYGZob{}}
            \PYG{k+kt}{boolean} \PYG{n}{first} \PYG{o}{=} \PYG{k+kc}{true}\PYG{o}{;}
            \PYG{k}{for} \PYG{o}{(}\PYG{n}{String} \PYG{n}{line}\PYG{o}{;} \PYG{o}{(}\PYG{n}{line} \PYG{o}{=} \PYG{n}{br}\PYG{o}{.}\PYG{n+na}{readLine}\PYG{o}{())} \PYG{o}{!=} \PYG{k+kc}{null}\PYG{o}{;)}
            \PYG{o}{\PYGZob{}}
                \PYG{k}{if} \PYG{o}{(}\PYG{n}{first}\PYG{o}{)\PYGZob{}}
                    \PYG{n}{first} \PYG{o}{=} \PYG{k+kc}{false}\PYG{o}{;}
                    \PYG{k}{for} \PYG{o}{(}\PYG{n}{String} \PYG{n}{name} \PYG{o}{:} \PYG{n}{line}\PYG{o}{.}\PYG{n+na}{split}\PYG{o}{(}\PYG{l+s}{\PYGZdq{} \PYGZdq{}}\PYG{o}{))\PYGZob{}}
                        \PYG{n}{Vertex} \PYG{n}{v} \PYG{o}{=} \PYG{k}{new} \PYG{n}{Vertex}\PYG{o}{(}\PYG{n}{name}\PYG{o}{);}
                        \PYG{n}{vertices}\PYG{o}{.}\PYG{n+na}{add}\PYG{o}{(}\PYG{n}{v}\PYG{o}{);}
                        \PYG{n}{nameToVertex}\PYG{o}{.}\PYG{n+na}{put}\PYG{o}{(}\PYG{n}{name}\PYG{o}{,}\PYG{n}{v}\PYG{o}{);}
                    \PYG{o}{\PYGZcb{}}
                \PYG{o}{\PYGZcb{}} \PYG{k}{else} \PYG{o}{\PYGZob{}}
                    \PYG{n}{String}\PYG{o}{[]} \PYG{n}{edge} \PYG{o}{=} \PYG{n}{line}\PYG{o}{.}\PYG{n+na}{split}\PYG{o}{(}\PYG{l+s}{\PYGZdq{} \PYGZdq{}}\PYG{o}{);}
                    \PYG{n}{nameToVertex}\PYG{o}{.}\PYG{n+na}{get}\PYG{o}{(}\PYG{n}{edge}\PYG{o}{[}\PYG{l+m+mi}{0}\PYG{o}{]).}\PYG{n+na}{addAllToAdjacency}\PYG{o}{(}\PYG{n}{nameToVertex}\PYG{o}{.}\PYG{n+na}{get}\PYG{o}{(}\PYG{n}{edge}\PYG{o}{[}\PYG{l+m+mi}{1}\PYG{o}{]));}
                \PYG{o}{\PYGZcb{}}
            \PYG{o}{\PYGZcb{}}
        \PYG{o}{\PYGZcb{}} \PYG{k}{catch} \PYG{o}{(}\PYG{n}{IOException} \PYG{n}{e}\PYG{o}{)} \PYG{o}{\PYGZob{}}
            \PYG{n}{e}\PYG{o}{.}\PYG{n+na}{printStackTrace}\PYG{o}{();}
        \PYG{o}{\PYGZcb{}}
        \PYG{n}{graph} \PYG{o}{=} \PYG{k}{new} \PYG{n}{Graph}\PYG{o}{(}\PYG{n}{vertices}\PYG{o}{.}\PYG{n+na}{toArray}\PYG{o}{(}\PYG{k}{new} \PYG{n}{Vertex}\PYG{o}{[}\PYG{l+m+mi}{0}\PYG{o}{]));}
    \PYG{o}{\PYGZcb{}}

    \PYG{k+kt}{void} \PYG{n+nf}{generateSolution}\PYG{o}{()\PYGZob{}}
        \PYG{n}{superStar} \PYG{o}{=} \PYG{n}{graph}\PYG{o}{.}\PYG{n+na}{modifiedDFS}\PYG{o}{();}
    \PYG{o}{\PYGZcb{}}

    \PYG{n}{String} \PYG{n+nf}{getOutput}\PYG{o}{()\PYGZob{}}
        \PYG{k}{if} \PYG{o}{(!}\PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{o}{.}\PYG{n+na}{equals}\PYG{o}{(}\PYG{n}{superStar}\PYG{o}{))\PYGZob{}}
            \PYG{k}{return} \PYG{l+s}{\PYGZdq{}Superstar ist \PYGZdq{}} \PYG{o}{+} \PYG{n}{superStar} \PYG{o}{+} \PYG{l+s}{\PYGZdq{}.\PYGZbs{}nAnzahl der Anfragen: \PYGZdq{}} \PYG{o}{+} \PYG{n}{graph}\PYG{o}{.}\PYG{n+na}{getAnfrageCounter}\PYG{o}{();}
        \PYG{o}{\PYGZcb{}} \PYG{k}{else} \PYG{o}{\PYGZob{}}
            \PYG{k}{return} \PYG{l+s}{\PYGZdq{}Es gibt keinen Superstar.\PYGZbs{}nAnzahl der Anfragen: \PYGZdq{}} \PYG{o}{+} \PYG{n}{graph}\PYG{o}{.}\PYG{n+na}{getAnfrageCounter}\PYG{o}{();}
        \PYG{o}{\PYGZcb{}}
    \PYG{o}{\PYGZcb{}}
\PYG{o}{\PYGZcb{}}
\end{Verbatim}
